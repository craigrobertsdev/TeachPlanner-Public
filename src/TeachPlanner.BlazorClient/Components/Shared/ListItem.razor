@typeparam TItem

<p style="@Style" class="text-center text-lg border-b border-darkGreenBorder hover:cursor-pointer hover:bg-baseHover @(IsSelected() ? "bg-baseFocus" : "")"
   @onclick=HandleItemClick>
    <p class="p-1 ">
        @ChildContent
    </p>
</p>

@code {
    [Parameter]
    public TItem Item { get; set; } = default!;

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public string Style { get; set; } = string.Empty;

    [Parameter]
    public bool Selectable { get; set; } = true;

    [CascadingParameter]
    public ItemsList<TItem> Parent { get; set; } = default!;

    private bool Selected { get; set; }

    private void HandleItemClick()
    {
        if (!Selectable)
        {
            return;
        }

        Parent.HandleItemClick(Item);
        Selected = IsSelected();
    }

    private bool IsSelected()
    {
        return Parent.SelectedItems.Contains(Item);
    }

    protected override void OnInitialized()
    {
        if (Parent is null || Parent.GetType() != typeof(ItemsList<TItem>))
        {
            throw new InvalidOperationException("The ListItem component must be placed inside an ItemsList component.");
        }

        Selected = IsSelected();
    }
}

@using TeachPlanner.BlazorClient.Components.Shared
@using TeachPlanner.BlazorClient.Models.Resources

<TabView Centered="true" Gap="true">
    <TabPage Title="Resources">
        @if (Resources?.Count > 0) {
            var resources = FilterResources(Resources);
            <ItemsList TItem="ResourceModel" Items=resources>
                @foreach (var resource in resources) {
                    <a target="_blank" href="@resource.Url" class="text-darkGreen underline">
                        <ListItem Item="resource" Selectable=false>
                            @resource.Name
                        </ListItem>
                    </a>
                }
            </ItemsList>
        }
        else {
            <div class="flex justify-center align-center h-full p-2">
                No resources selected for this lesson
            </div>
        }
    </TabPage>
    <TabPage Title="Assessments">
        @if (Resources.Count > 0) {
            var assessments = FilterAssessments(Resources);
            <ItemsList TItem="ResourceModel" Items=assessments>
                @foreach (var assessment in assessments) {
                    <a target="_blank" href="@assessment.Url" class="text-darkGreen underline">
                        <ListItem Item="assessment" Selectable=false>
                            @assessment.Name
                        </ListItem>
                    </a>
                }
            </ItemsList>
        }
        else {
            <div class="flex justify-center align-center h-full p-2 text-center">
                No assessments planned for this lesson
            </div>
        }
    </TabPage>
</TabView>

@code {
    [Parameter]
    public List<ResourceModel> Resources { get; set; } = [];
    private List<ResourceModel> FilterResources(List<ResourceModel> resources) {
        return resources.Where(r => r.IsAssessment == false).ToList();
    }

    private List<ResourceModel> FilterAssessments(List<ResourceModel> resources) {
        return resources.Where(r => r.IsAssessment == true).ToList();
    }
}
